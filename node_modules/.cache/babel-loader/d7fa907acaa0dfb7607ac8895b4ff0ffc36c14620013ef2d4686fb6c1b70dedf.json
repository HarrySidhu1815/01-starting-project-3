{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://reduxcart-d17e0-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Failed to fetch the data');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"penidng\",\n      title: \"Sending...\",\n      message: \"Sending cart data\"\n    }));\n    const sendCartData = async () => {\n      const response = await fetch(\"https://reduxcart-d17e0-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending the cart data failed\");\n      }\n    };\n    try {\n      await sendCartData();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Your data is successfully sent!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","method","body","JSON","stringify"],"sources":["/Users/harjobanpreetsinghsidhu/Downloads/01-starting-project 3/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData = async() => {\n            const response = await fetch('https://reduxcart-d17e0-default-rtdb.firebaseio.com/cart.json')\n            \n            if(!response.ok){\n                throw new Error('Failed to fetch the data')\n            }\n\n            const data = await response.json()\n            return data\n        }\n        try {\n            const cartData = await fetchData()\n            dispatch(cartActions.replaceCart(cartData))\n        } catch (error) {\n            dispatch(\n                uiActions.showNotification({\n                  status: \"error\",\n                  title: \"Error!\",\n                  message: \"Sending cart data failed!\",\n                })\n              )\n        }\n    }\n}\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"penidng\",\n          title: \"Sending...\",\n          message: \"Sending cart data\",\n        })\n      );\n      const sendCartData = async () => {\n        const response = await fetch(\n          \"https://reduxcart-d17e0-default-rtdb.firebaseio.com/cart.json\",\n          {\n            method: \"PUT\",\n            body: JSON.stringify(cart),\n          }\n        );\n  \n        if (!response.ok) {\n          throw new Error(\"Sending the cart data failed\");\n        }\n      };\n      try {\n          await sendCartData()\n          dispatch(\n            uiActions.showNotification({\n              status: \"success\",\n              title: \"Success!\",\n              message: \"Your data is successfully sent!\",\n            })\n          );\n      } catch (error) {\n          dispatch(\n            uiActions.showNotification({\n              status: \"error\",\n              title: \"Error!\",\n              message: \"Sending cart data failed!\",\n            })\n          )\n      }\n    };\n  };"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAW;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,CAAC;MAE7F,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC;IACD,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACH,WAAW,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZV,QAAQ,CACJF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACP;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOhB,QAAQ,IAAK;IACzBA,QAAQ,CACNF,SAAS,CAACa,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAA+D,EAC/D;QACEc,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;MAC3B,CACF,CAAC;MAED,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC;IACD,IAAI;MACA,MAAMU,YAAY,CAAC,CAAC;MACpBf,QAAQ,CACNF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACL,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZV,QAAQ,CACNF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACL;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}